{"version":3,"sources":["assets/styles/GlobalStyle.js","assets/styles/theme.js","views/Root.style.js","providers/PokemonsProvider.js","components/atoms/Title/Title.style.js","components/atoms/Title/Title.js","components/templates/MainTemplate/MainTemplate.style.js","components/templates/MainTemplate/MainTemplate.js","components/molecules/Searcher/Searcher.style.js","assets/helpers/dataFetch.js","components/atoms/Input/Input.style.js","components/atoms/Input/Input.js","components/atoms/Button/Button.style.js","components/atoms/Button/Button.js","components/atoms/ErrorMessage/ErrorMessage.style.js","components/atoms/ErrorMessage/ErrorMessage.js","components/molecules/Searcher/Searcher.js","components/organisms/PokemonsBoard/PokemonsBoard.style.js","components/molecules/NavButtons/NavButtons.style.js","hooks/getPokemons.js","components/molecules/NavButtons/NavButtons.js","components/organisms/PokemonsList/PokemonsList.style.js","components/molecules/PokemonCard/PokemonCard.style.js","components/atoms/Loader/Loader.style.js","components/atoms/Loader/Loader.js","components/molecules/PokemonCard/PokemonCard.js","components/organisms/PokemonsList/PokemonsList.js","components/organisms/PokemonModal/PokemonModal.style.js","components/atoms/CloseButton/CloseButton.style.js","components/atoms/CloseButton/CloseButton.js","components/molecules/PokemonAppearance/PokemonAppearance.style.js","components/atoms/PokemonImage/PokemonImage.js","components/molecules/PokemonAppearance/PokemonAppearance.js","components/molecules/PokemonStats/PokemonStats.style.js","components/atoms/PokemonStat/PokemonStat.style.js","components/atoms/PokemonStat/PokemonStat.js","components/molecules/PokemonStats/PokemonStats.js","components/molecules/PokemonAbilities/PokemonAbilities.style.js","components/atoms/PokemonAbility/PokemonAbility.style.js","components/atoms/PokemonAbility/PokemonAbility.js","components/molecules/PokemonAbilities/PokemonAbilities.js","components/organisms/PokemonModal/PokemonModal.js","components/organisms/PokemonsBoard/PokemonsBoard.js","views/Root.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","colors","yellow","orange","blue","white","violet","Wrapper","styled","div","PokemonsContext","React","createContext","showModal","closeModal","setPokemon","PokemonsProvider","children","useState","pokemon","searchError","setSearchError","handlePokemonSearch","e","a","preventDefault","Provider","value","AppTitle","h1","Title","Header","header","queryClient","QueryClient","MainTemplate","QueryClientProvider","client","SearchPokemon","form","fetchPokemons","limit","offset","fetch","res","json","fetchPokemon","name","toLowerCase","PokemonInput","input","Input","onChange","type","placeholder","required","StyledButton","button","Button","className","text","disabled","onClick","StyledMessage","p","ErrorMessage","message","Searcher","useContext","formValue","setFormValue","then","data","catch","error","onSubmit","target","GetPokemons","window","innerWidth","useQuery","isLoading","refetch","nextPage","prevPage","query","NavButtons","Details","PokemonName","StyledLoader","Loader","PokemonCard","src","sprites","front_default","alt","PokemonsList","results","map","PokemonDetails","CloseButton","PokemonImage","url","PokemonAppearance","back_default","StatsContainer","Name","Value","PokemonStat","stat","base_stat","PokemonStats","stats","StyledTitle","AbilitiesContainer","StyledName","StyledValue","PokemonAbility","ability","is_hidden","slot","propTypes","sbilities","PropTypes","object","PokemonAbilities","abilities","PokemonModal","PokemonsBoard","Root","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f5246b1.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\nhtml{\r\n    box-sizing:border-box;\r\n    color:'#222'\r\n\r\n}\r\n\r\n*,*::after, *::before{\r\n    box-sizing:inherit;\r\n    margin:0;\r\n    padding:0;\r\n}\r\n\r\nbody{\r\n    font-family:'Indie flower';\r\n    font-size:10px;\r\n}\r\n\r\na,button{\r\n    font-family:\"Indie flower\", sans-serif;\r\n}\r\n\r\n`;\r\n","export const theme = {\r\n  colors: { yellow: '#F4D06F', orange: '#FF8811', blue: '#9DD9D2', white: '#FFF8F0', violet: '#392F5A' },\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n","import React, { useState } from 'react';\r\n\r\nexport const PokemonsContext = React.createContext({\r\n  showModal: () => {},\r\n  closeModal: () => {},\r\n  setPokemon: () => {},\r\n});\r\n\r\nconst PokemonsProvider = ({ children }) => {\r\n  const [pokemon, setPokemon] = useState(null);\r\n  const [searchError, setSearchError] = useState(null);\r\n\r\n  const showModal = (pokemon) => {\r\n    setPokemon(pokemon);\r\n    setSearchError(null);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setPokemon(null);\r\n  };\r\n\r\n  const handlePokemonSearch = async (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <PokemonsContext.Provider\r\n      value={{ showModal, closeModal, handlePokemonSearch, pokemon, setPokemon, searchError, setSearchError }}\r\n    >\r\n      {children}\r\n    </PokemonsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PokemonsProvider;\r\n","import styled from 'styled-components';\r\n\r\nexport const AppTitle = styled.h1`\r\n  font-family: 'Permanent Marker';\r\n  font-size: 5em;\r\n  color: ${({ theme }) => theme.colors.violet};\r\n  text-shadow: 2px 2px ${({ theme }) => theme.colors.yellow};\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 6em;\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    font-size: 3.2em;\r\n  }\r\n\r\n  @media (max-width: 700px) and (orientation: landscape) {\r\n    font-size: 2.8em;\r\n  }\r\n`;\r\n","import { AppTitle } from './Title.style';\r\n\r\nconst Title = () => {\r\n  return <AppTitle>Pokemon Finder</AppTitle>;\r\n};\r\n\r\nexport default Title;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: linear-gradient(-135deg, ${({ theme }) => theme.colors.orange}, ${({ theme }) => theme.colors.violet});\r\n\r\n  @media (max-width: 700px) {\r\n    justify-content: space-evenly;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  width: 100%;\r\n  height: 12%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (max-width: 700px) {\r\n    height: 10%;\r\n  }\r\n`;\r\n","import Title from '../../atoms/Title/Title';\r\nimport { Wrapper, Header } from './MainTemplate.style';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst MainTemplate = ({ children }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Header>\r\n        <Title />\r\n      </Header>\r\n      <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainTemplate;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 10%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (max-width: 700px) {\r\n    height: 15%;\r\n    padding: 0;\r\n  }\r\n\r\n  @media (max-width: 700px) and (orientation: landscape) {\r\n    height: 15%;\r\n    padding: 0;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nexport const SearchPokemon = styled.form`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n\r\n  @media (max-width: 700px) {\r\n    flex-direction: column;\r\n    margin-bottom: 20px;\r\n    padding: 0;\r\n  }\r\n\r\n  @media (max-width: 700px) and (orientation: landscape) {\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    height: 10%;\r\n    margin-bottom: 20px;\r\n    padding: 0;\r\n  }\r\n`;\r\n","export const fetchPokemons = async (limit, offset) => {\r\n  const res = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`);\r\n  return await res.json();\r\n};\r\n\r\nexport const fetchPokemon = async (name) => {\r\n  const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${name.toLowerCase()}`);\r\n  return await res.json();\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const PokemonInput = styled.input`\r\n  width: 20%;\r\n  min-width: 350px;\r\n  font-size: 2.2em;\r\n  line-height: 2.4em;\r\n  font-family: 'Indie Flower';\r\n  letter-spacing: 1px;\r\n  background-color: transparent;\r\n  border: 3px solid ${({ theme }) => theme.colors.violet};\r\n  border-radius: 40px;\r\n  box-shadow: 0px 0px 12px ${({ theme }) => theme.colors.violet};\r\n  padding: 0 15px;\r\n  color: ${({ theme }) => theme.colors.white};\r\n  letter-spacing: 1px;\r\n\r\n  &::placeholder {\r\n    color: ${({ theme }) => theme.colors.white};\r\n    letter-spacing: 2px;\r\n    font-family: 'Indie flower';\r\n    opacity: 0.5;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0px 0px 12px ${({ theme }) => theme.colors.yellow};\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 40%;\r\n    font-size: 3em;\r\n  }\r\n\r\n  @media (max-width: 1024px) and (orientation: landscape) {\r\n    width: 40%;\r\n    font-size: 2.2em;\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    width: 100%;\r\n    font-size: 1.8em;\r\n    line-height: 2.2;\r\n    border-radius: 0;\r\n  }\r\n\r\n  @media (max-width: 700px) and (orientation: landscape) {\r\n    width: 40%;\r\n    min-width: 20px;\r\n    border-radius: 40px;\r\n    font-size: 1.8em;\r\n    line-height: 1.8em;\r\n  }\r\n`;\r\n","import { PokemonInput } from './Input.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = ({ value, onChange }) => {\r\n  return <PokemonInput type=\"text\" placeholder=\"Find Pokemon...\" value={value} onChange={onChange} required />;\r\n};\r\n\r\nInput.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  width: 6%;\r\n  min-width: 150px;\r\n  font-size: 2.2em;\r\n  line-height: 2.4em;\r\n  color: ${({ theme }) => theme.colors.yellow};\r\n  letter-spacing: 1px;\r\n  margin-left: 24px;\r\n  background-color: ${({ theme }) => theme.colors.violet};\r\n  border: none;\r\n  border-radius: 40px;\r\n  cursor: pointer;\r\n  transition: 0.6s;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    color: ${({ theme }) => theme.colors.yellow};\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &.navBtn {\r\n    line-height: 1.6em;\r\n  }\r\n\r\n  &:disabled {\r\n    color: gray;\r\n  }\r\n\r\n  &:disabled:hover {\r\n    background-color: ${({ theme }) => theme.colors.violet};\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 3em;\r\n    width: 10%;\r\n    min-width: 200px;\r\n\r\n    &:hover {\r\n      background-color: ${({ theme }) => theme.colors.violet};\r\n      color: ${({ theme }) => theme.colors.yellow};\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1024px) and (orientation: landscape) {\r\n    font-size: 2.4em;\r\n    line-height: 2.6em;\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    font-size: 2em;\r\n    min-width: 100px;\r\n\r\n    &.search {\r\n      width: 100%;\r\n      line-height: 2em;\r\n      margin: 0;\r\n      border-radius: 0;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 700px) and (orientation: landscape) {\r\n    font-size: 1.8em;\r\n\r\n    &.search {\r\n      width: 30%;\r\n      min-width: 100px;\r\n      border-radius: 40px;\r\n      margin-left: 20px;\r\n    }\r\n  }\r\n`;\r\n","import { StyledButton } from './Button.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ className, text, disabled, name, onClick }) => {\r\n  return (\r\n    <StyledButton name={name} className={className} disabled={disabled} onClick={onClick}>\r\n      {text}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  text: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledMessage = styled.p`\r\n  color: red;\r\n  font-size: 2.5em;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  letter-spacing: 1px;\r\n\r\n  @media (max-width: 700px) {\r\n    padding: 0;\r\n    font-size: 2em;\r\n  }\r\n`;\r\n","import { StyledMessage } from './ErrorMessage.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ErrorMessage = ({ message }) => {\r\n  return <StyledMessage>{message}</StyledMessage>;\r\n};\r\n\r\nErrorMessage.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useState, useContext } from 'react';\r\nimport { PokemonsContext } from '../../../providers/PokemonsProvider';\r\n\r\nimport { Wrapper, SearchPokemon } from './Searcher.style';\r\nimport { fetchPokemon } from '../../../assets/helpers/dataFetch';\r\n\r\nimport Input from '../../atoms/Input/Input';\r\nimport Button from '../../atoms/Button/Button';\r\nimport ErrorMessage from '../../atoms/ErrorMessage/ErrorMessage';\r\n\r\nconst Searcher = () => {\r\n  const { setPokemon, searchError, setSearchError } = useContext(PokemonsContext);\r\n  const [formValue, setFormValue] = useState('');\r\n\r\n  const handleFormInput = (e) => {\r\n    setFormValue(e.target.value);\r\n  };\r\n\r\n  const handlePokemonSearch = async (e) => {\r\n    e.preventDefault();\r\n    setSearchError(null);\r\n\r\n    await fetchPokemon(formValue)\r\n      .then((data) => setPokemon(data))\r\n      .catch((error) => {\r\n        setSearchError('Pokemon not found...');\r\n      });\r\n    setFormValue('');\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <SearchPokemon onSubmit={handlePokemonSearch}>\r\n        <Input value={formValue} onChange={handleFormInput} />\r\n        <Button className=\"search\" type=\"submit\" text=\"search\" disabled={false} />\r\n      </SearchPokemon>\r\n      {searchError ? <ErrorMessage message={searchError} /> : ''}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Searcher;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 80%;\r\n  max-width: 1000px;\r\n  height: 70%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 100%;\r\n  }\r\n  @media (max-width: 700px) and (orientation: landscape) {\r\n    height: 50%;\r\n    flex-grow: 1;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 40%;\r\n  height: 10%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (max-width: 700px) {\r\n    height: 15%;\r\n    width: 100%;\r\n    margin: 5px 0;\r\n    padding-bottom: 5px;\r\n  }\r\n`;\r\n","import { useQuery } from 'react-query';\r\nimport { fetchPokemons } from '../assets/helpers/dataFetch';\r\n\r\nlet offset = 0;\r\nconst GetPokemons = () => {\r\n  const limit = window.innerWidth >= 700 ? 12 : 6;\r\n  const { isLoading, data, refetch } = useQuery('pokemons', () => fetchPokemons(limit, offset));\r\n\r\n  const nextPage = () => {\r\n    offset += limit;\r\n    refetch();\r\n  };\r\n  const prevPage = () => {\r\n    offset -= limit;\r\n    refetch();\r\n  };\r\n  return { nextPage, prevPage, offset, query: { isLoading, data, refetch } };\r\n};\r\n\r\nexport default GetPokemons;\r\n","import { Wrapper } from './NavButtons.style';\r\nimport GetPokemons from '../../../hooks/getPokemons';\r\n\r\nimport Button from '../../atoms/Button/Button';\r\n\r\nconst NavButtons = () => {\r\n  const { nextPage, prevPage, offset } = GetPokemons(12);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Button className=\"navBtn\" text=\"Prev\" disabled={offset === 0 ? true : false} name=\"prev\" onClick={prevPage} />\r\n      <Button className=\"navBtn\" text=\"Next\" name=\"next\" disabled={false} onClick={nextPage} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 85%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n\r\n  @media (max-width: 700px) {\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    flex-grow: 1;\r\n  }\r\n\r\n  @media (max-width: 700px) and (orientation: landscape) {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 20%;\r\n  height: 30%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  border: 3px solid ${({ theme }) => theme.colors.violet};\r\n  border-radius: 15px;\r\n  margin: 0 10px;\r\n  background-color: ${({ theme }) => theme.colors.violet};\r\n  box-shadow: 0px 0px 10px ${({ theme }) => theme.colors.yellow};\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    p {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    width: 95%;\r\n    height: 14%;\r\n    margin: 3px 0;\r\n    border-radius: 5px;\r\n    box-shadow: 0px 0px 5px ${({ theme }) => theme.colors.yellow};\r\n    flex-direction: row;\r\n\r\n    img {\r\n      height: 95%;\r\n    }\r\n\r\n    p {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 700px) and (orientation: landscape) {\r\n    width: 45%;\r\n    height: 25%;\r\n    align-items: center;\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nexport const Details = styled.p`\r\n  color: ${({ theme }) => theme.colors.orange};\r\n  font-size: 1.6em;\r\n  opacity: 0.01;\r\n  transition: 0.5s;\r\n`;\r\n\r\nexport const PokemonName = styled.h1`\r\n  font-size: 2.2em;\r\n  color: ${({ theme }) => theme.colors.yellow};\r\n  letter-spacing: 2px;\r\n  &::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  @media (max-width: 1024px) and (orientation: landscape) {\r\n    padding-top: 20px;\r\n  }\r\n\r\n  @media (max-width: 800px) {\r\n    font-size: 1.6em;\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    font-size: 2em;\r\n    padding: 0;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledLoader = styled.p`\r\n  width: 100%;\r\n  color: ${({ theme }) => theme.colors.yellow};\r\n  font-size: 2em;\r\n  text-align: center;\r\n`;\r\n","import { StyledLoader } from './Loader.style';\r\n\r\nconst Loader = () => {\r\n  return <StyledLoader>Loading...</StyledLoader>;\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Wrapper, Details, PokemonName } from './PokemonCard.style';\r\nimport { useQuery } from 'react-query';\r\nimport { fetchPokemon } from '../../../assets/helpers/dataFetch';\r\nimport { PokemonsContext } from '../../../providers/PokemonsProvider';\r\nimport Loader from '../../atoms/Loader/Loader';\r\n\r\nconst PokemonCard = ({ name }) => {\r\n  const { isLoading, error, data } = useQuery(`${name}`, () => fetchPokemon(name));\r\n  const { showModal } = useContext(PokemonsContext);\r\n\r\n  if (error) return <Wrapper>Sorry, something went wrong....</Wrapper>;\r\n\r\n  return (\r\n    <Wrapper onClick={() => showModal(data)}>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <PokemonName>{name}</PokemonName>\r\n          <img src={data.sprites.front_default} alt=\"\" />\r\n          <Details>Show details</Details>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nPokemonCard.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default PokemonCard;\r\n","import { Wrapper } from './PokemonsList.style';\r\nimport GetPokemons from '../../../hooks/getPokemons';\r\n\r\nimport PokemonCard from '../../molecules/PokemonCard/PokemonCard';\r\n\r\nconst PokemonsList = () => {\r\n  const {\r\n    query: { isLoading, data },\r\n  } = GetPokemons();\r\n\r\n  if (isLoading) return 'Loading';\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading\r\n        ? 'Loading'\r\n        : data.results.map((pokemon) => {\r\n            return <PokemonCard key={pokemon.name} name={pokemon.name} />;\r\n          })}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PokemonsList;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  top: 0%;\r\n  left: 0%;\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  backdrop-filter: blur(3px);\r\n  animation: showModal 0.5s linear;\r\n\r\n  @keyframes showModal {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PokemonDetails = styled.div`\r\n  height: 70%;\r\n  width: 50%;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.colors.violet};\r\n  border-radius: 20px;\r\n  border: 2px solid ${({ theme }) => theme.colors.yellow};\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: 0;\r\n  }\r\n\r\n  @media (max-width: 1400px) and (orientation: landscape) {\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: 0;\r\n  }\r\n`;\r\n\r\nexport const PokemonName = styled.h1`\r\n  width: 80%;\r\n  color: ${({ theme }) => theme.colors.yellow};\r\n  text-align: center;\r\n  padding: 10px 0;\r\n  font-size: 3em;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.yellow};\r\n  letter-spacing: 2px;\r\n  &::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  @media (max-width: 1400px) and (orientation: landscape) {\r\n    font-size: 5em;\r\n    padding: 20px 0;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 5em;\r\n    padding: 20px 0;\r\n  }\r\n\r\n  @media (max-width: 1024px) and (orientation: landscape) {\r\n    font-size: 4em;\r\n    padding: 10px 0;\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    font-size: 2.4em;\r\n    padding: 7px 0;\r\n  }\r\n  @media (max-width: 700px) and (orientation: landscape) {\r\n    font-size: 2em;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  position: absolute;\r\n  right: 2%;\r\n  border-radius: 50%;\r\n  border: 2px solid ${({ theme }) => theme.colors.yellow};\r\n  background-color: ${({ theme }) => theme.colors.violet};\r\n  color: ${({ theme }) => theme.colors.yellow};\r\n  transform: rotate(90deg);\r\n  margin: 10px 10px;\r\n  font-size: 2em;\r\n  cursor: pointer;\r\n  transition: 0.4s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1) rotate(90deg);\r\n    border-color: ${({ theme }) => theme.colors.orange};\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border: none;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 60px;\r\n    height: 60px;\r\n    font-size: 4em;\r\n    top: 2%;\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    width: 35px;\r\n    height: 35px;\r\n    font-size: 2.4em;\r\n    top: 0;\r\n  }\r\n`;\r\n","import { StyledButton } from './CloseButton.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CloseButton = ({ onClick }) => {\r\n  return <StyledButton onClick={onClick}>X</StyledButton>;\r\n};\r\n\r\nCloseButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default CloseButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  width: 50%;\r\n  height: 25%;\r\n  margin: 2%;\r\n\r\n  @media (max-width: 1024px) and (orientation: landscape) {\r\n    height: 20%;\r\n    width: 40%;\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    width: 70%;\r\n    height: 20%;\r\n  }\r\n\r\n  @media (max-width: 700px) and (orientation: landscape) {\r\n    width: 30%;\r\n    height: 30%;\r\n    margin: 0;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst PokemonImage = ({ url }) => {\r\n  return <img src={url} alt=\"pokemon_picture\" />;\r\n};\r\n\r\nPokemonImage.propTypes = {\r\n  url: PropTypes.string,\r\n};\r\n\r\nexport default PokemonImage;\r\n","import { Wrapper } from './PokemonAppearance.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport PokemonImage from '../../atoms/PokemonImage/PokemonImage';\r\n\r\nconst PokemonAppearance = ({ pokemon }) => {\r\n  return (\r\n    <Wrapper>\r\n      <PokemonImage url={pokemon.sprites.front_default} />\r\n      <PokemonImage url={pokemon.sprites.back_default} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nPokemonAppearance.propTypes = {\r\n  pokemon: PropTypes.object,\r\n};\r\n\r\nexport default PokemonAppearance;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 95%;\r\n  height: 20%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n\r\n  @media (max-width: 1024px) {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  @media (max-width: 1024px) and (orientation: landscape) {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  @media (max-width: 700px) and (orientation: landscape) {\r\n    flex-direction: row;\r\n    height: 24%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  color: ${({ theme }) => theme.colors.yellow};\r\n  font-size: 2.2em;\r\n  letter-spacing: 2px;\r\n  padding-left: 2%;\r\n\r\n  @media (max-width: 1400px) and (orientation: landscape) {\r\n    font-size: 3.8em;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 4em;\r\n  }\r\n\r\n  @media (max-width: 1024px) and (orientation: landscape) {\r\n    font-size: 3em;\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    font-size: 2em;\r\n  }\r\n  @media (max-width: 700px) and (orientation: landscape) {\r\n    width: 20%;\r\n  }\r\n`;\r\n\r\nexport const StatsContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n\r\n  @media (max-width: 700px) {\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 16%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Name = styled.h1`\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n  font-size: 1.8em;\r\n  color: ${({ theme }) => theme.colors.orange};\r\n\r\n  @media (max-width: 1400px) and (orientation: landscape) {\r\n    font-size: 3em;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 3em;\r\n  }\r\n\r\n  @media (max-width: 1024px) and (orientation: landscape) {\r\n    font-size: 2.2em;\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    font-size: 1.6em;\r\n  }\r\n  @media (max-width: 700px) and (orientation: landscape) {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const Value = styled.p`\r\n  font-size: 2em;\r\n  color: ${({ theme }) => theme.colors.white};\r\n\r\n  @media (max-width: 1400px) and (orientation: landscape) {\r\n    font-size: 3.5em;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 3.5em;\r\n  }\r\n\r\n  @media (max-width: 1024px) and (orientation: landscape) {\r\n    font-size: 2.8em;\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    font-size: 2em;\r\n  }\r\n`;\r\n","import { Wrapper, Name, Value } from './PokemonStat.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PokemonStat = ({ stat }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Name>{stat.stat.name}</Name>\r\n      <Value>{stat.base_stat}</Value>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nPokemonStat.propTypes = {\r\n  stat: PropTypes.object,\r\n};\r\n\r\nexport default PokemonStat;\r\n","import { Wrapper, Title, StatsContainer } from './PokemonStats.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport PokemonStat from '../../atoms/PokemonStat/PokemonStat';\r\n\r\nconst PokemonStats = ({ pokemon: { stats } }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Title>Stats: </Title>\r\n      <StatsContainer>\r\n        {stats.map((stat) => {\r\n          return <PokemonStat key={stat.stat.name} stat={stat} />;\r\n        })}\r\n      </StatsContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nPokemonStats.propTypes = {\r\n  stats: PropTypes.object,\r\n};\r\n\r\nexport default PokemonStats;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 95%;\r\n  height: 30%;\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (max-width: 800px) {\r\n    margin-top: 40px;\r\n  }\r\n\r\n  @media (max-width: 700px) and (orientation: landscape) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledTitle = styled.h1`\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  color: ${({ theme }) => theme.colors.yellow};\r\n  font-size: 2.2em;\r\n  letter-spacing: 2px;\r\n  padding-left: 2%;\r\n\r\n  @media (max-width: 1400px) and (orientation: landscape) {\r\n    font-size: 3.8em;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 4em;\r\n  }\r\n\r\n  @media (max-width: 1024px) and (orientation: landscape) {\r\n    font-size: 3em;\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    font-size: 2em;\r\n  }\r\n  @media (max-width: 700px) and (orientation: landscape) {\r\n    width: 25%;\r\n  }\r\n`;\r\n\r\nexport const AbilitiesContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  @media (max-width: 700px) {\r\n    flex-wrap: wrap;\r\n    justify-content: space-around;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  margin: 0 10px;\r\n\r\n  @media (max-width: 700px) {\r\n    width: 28%;\r\n    margin: 5px;\r\n  }\r\n`;\r\n\r\nexport const StyledName = styled.h1`\r\n  color: ${({ theme }) => theme.colors.orange};\r\n  text-align: center;\r\n  font-size: em;\r\n\r\n  @media (max-width: 1400px) and (orientation: landscape) {\r\n    font-size: 3em;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 3em;\r\n  }\r\n\r\n  @media (max-width: 1024px) and (orientation: landscape) {\r\n    font-size: 2.2em;\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    font-size: 1.6em;\r\n    margin: 5px;\r\n  }\r\n`;\r\n\r\nexport const StyledValue = styled.p`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-size: 2em;\r\n  letter-spacing: 2px;\r\n  margin: 5px 0;\r\n\r\n  @media (max-width: 1400px) and (orientation: landscape) {\r\n    font-size: 3em;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 3em;\r\n  }\r\n\r\n  @media (max-width: 1024px) and (orientation: landscape) {\r\n    font-size: 2.5em;\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    font-size: 1.6em;\r\n  }\r\n`;\r\n","import { StyledName, StyledValue, Wrapper } from './PokemonAbility.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PokemonAbility = ({ ability }) => {\r\n  return (\r\n    <Wrapper>\r\n      <StyledName>{ability.ability.name}</StyledName>\r\n      <StyledValue>Hidden: {ability.is_hidden ? 'true' : 'false'}</StyledValue>\r\n      <StyledValue>Slot: {ability.slot}</StyledValue>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nPokemonAbility.propTypes = {\r\n  ability: PropTypes.object,\r\n};\r\n\r\nexport default PokemonAbility;\r\n","import { Wrapper, StyledTitle, AbilitiesContainer } from './PokemonAbilities.style';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport PokemonAbility from '../../atoms/PokemonAbility/PokemonAbility';\r\n\r\nconst PokemonAbilities = ({ pokemon: { abilities } }) => {\r\n  return (\r\n    <Wrapper>\r\n      <StyledTitle>Abilities:</StyledTitle>\r\n      <AbilitiesContainer>\r\n        {abilities.map((ability) => {\r\n          return <PokemonAbility key={ability.ability.name} ability={ability} />;\r\n        })}\r\n      </AbilitiesContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nPokemonAbility.propTypes = {\r\n  sbilities: PropTypes.object,\r\n};\r\n\r\nexport default PokemonAbilities;\r\n","import React, { useContext } from 'react';\r\nimport { PokemonsContext } from '../../../providers/PokemonsProvider';\r\n\r\nimport { Wrapper, PokemonDetails, PokemonName } from './PokemonModal.style';\r\n\r\nimport ClosedButton from '../../atoms/CloseButton/CloseButton';\r\nimport PokemonAppearance from '../../molecules/PokemonAppearance/PokemonAppearance';\r\nimport PokemonStats from '../../molecules/PokemonStats/PokemonStats';\r\nimport PokemonAbilities from '../../molecules/PokemonAbilities/PokemonAbilities';\r\n\r\nconst PokemonModal = () => {\r\n  const { closeModal, pokemon } = useContext(PokemonsContext);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PokemonDetails>\r\n        <ClosedButton onClick={closeModal} />\r\n        <PokemonName>{pokemon.name}</PokemonName>\r\n        <PokemonAppearance pokemon={pokemon} />\r\n        <PokemonStats pokemon={pokemon} />\r\n        <PokemonAbilities pokemon={pokemon} />\r\n      </PokemonDetails>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PokemonModal;\r\n","import React, { useContext } from 'react';\r\nimport { Wrapper } from './PokemonsBoard.style';\r\nimport { PokemonsContext } from '../../../providers/PokemonsProvider';\r\n\r\nimport NavButtons from '../../molecules/NavButtons/NavButtons';\r\nimport PokemonsList from '../../organisms/PokemonsList/PokemonsList';\r\nimport PokemonModal from '../PokemonModal/PokemonModal';\r\n\r\nconst PokemonsBoard = () => {\r\n  const { offset, pokemon } = useContext(PokemonsContext);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <NavButtons />\r\n      <PokemonsList offset={offset} />\r\n      {pokemon ? <PokemonModal /> : null}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PokemonsBoard;\r\n","import { GlobalStyle } from '../assets/styles/GlobalStyle';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from '../assets/styles/theme';\n\nimport { Wrapper } from './Root.style';\n\nimport PokemonsProvider from '../providers/PokemonsProvider';\n\nimport MainTemplate from '../components/templates/MainTemplate/MainTemplate';\nimport Searcher from '../components/molecules/Searcher/Searcher';\nimport PokeonsBord from '../components/organisms/PokemonsBoard/PokemonsBoard';\n\nfunction Root() {\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Wrapper>\n        <MainTemplate>\n          <PokemonsProvider>\n            <Searcher />\n            <PokeonsBord />\n          </PokemonsProvider>\n        </MainTemplate>\n      </Wrapper>\n    </ThemeProvider>\n  );\n}\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './views/Root';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}